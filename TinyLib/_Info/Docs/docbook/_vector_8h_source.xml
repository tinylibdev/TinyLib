<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__vector_8h_source" xml:lang="en-US">
<title>Vector.h</title>
<indexterm><primary>TinyLib/Base/Vector.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__vector_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="__vector_8h_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__memory_8h">Memory.h</link>&quot;</emphasis>
<anchor xml:id="__vector_8h_source_1l00003"/>00003 
<anchor xml:id="__vector_8h_source_1l00004"/>00004 
<anchor xml:id="__vector_8h_source_1l00005"/>00005 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacetl">tl</link>&#32;{
<anchor xml:id="__vector_8h_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00007"/><link linkend="_classtl_1_1_vector">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classtl_1_1_vector">Vector</link>&#32;{
<anchor xml:id="__vector_8h_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__vector_8h_source_1l00009"/>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classtl_1_1_vector_1a6c294b7b39a334eaec4367060e529aee">Vector</link>();
<anchor xml:id="__vector_8h_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classtl_1_1_vector_1a3c0310b3d978ddf803d7aeaf9e82e698">~Vector</link>();
<anchor xml:id="__vector_8h_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1acdb3986c49b9e8e803ac5078c68eea96">push</link>(<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value);
<anchor xml:id="__vector_8h_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="_classtl_1_1_vector_1afb1123fd76e8b6b308a6c25999086afa">pop</link>();
<anchor xml:id="__vector_8h_source_1l00013"/>00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&amp;&#32;<link linkend="_classtl_1_1_vector_1a7eb4dfa2eaf5b8df36fa3aea54c76b17">operator[]</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index);
<anchor xml:id="__vector_8h_source_1l00014"/>00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classtl_1_1_vector_1a7eb4dfa2eaf5b8df36fa3aea54c76b17">operator[]</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__vector_8h_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1a07f7c6c116240b55639be24b8bdf142e">resize</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;new_capacity);
<anchor xml:id="__vector_8h_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1af14e7f588cf809b751c27e54ca4d4c62">clear</link>();
<anchor xml:id="__vector_8h_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classtl_1_1_vector_1a7a59cdb82916ebab5ae46f1b8f1efec6">getSize</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__vector_8h_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classtl_1_1_vector_1abdd4105bc63e8757f0bf76162b3f61e2">getCapacity</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__vector_8h_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1a0453ee154d99303001476eb3e3abe6fc">insert</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;pos,&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value);
<anchor xml:id="__vector_8h_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1ad694a236bd7afe82a1c0ee4b6a4229a9">erase</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;pos);
<anchor xml:id="__vector_8h_source_1l00021"/>00021 
<anchor xml:id="__vector_8h_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Iterator&#32;stuff&#32;specifically&#32;to&#32;be&#32;used&#32;in&#32;range-based&#32;for&#32;loops.</emphasis>
<anchor xml:id="__vector_8h_source_1l00023"/><link linkend="_classtl_1_1_vector_1adaad456fcc042885c805175e9331964d">00023</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T*&#32;<link linkend="_classtl_1_1_vector_1adaad456fcc042885c805175e9331964d">begin</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;data;&#32;}
<anchor xml:id="__vector_8h_source_1l00024"/><link linkend="_classtl_1_1_vector_1a496a89b7576a53b1b6d0101beb350991">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T*&#32;<link linkend="_classtl_1_1_vector_1a496a89b7576a53b1b6d0101beb350991">end</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;data&#32;+&#32;size;&#32;}
<anchor xml:id="__vector_8h_source_1l00025"/><link linkend="_classtl_1_1_vector_1a25f606e3214498664047c52437802f60">00025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T*&#32;<link linkend="_classtl_1_1_vector_1a25f606e3214498664047c52437802f60">begin</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;data;&#32;}
<anchor xml:id="__vector_8h_source_1l00026"/><link linkend="_classtl_1_1_vector_1a06dd5aa9e15b7e51dac4cf2a768c70ad">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T*&#32;<link linkend="_classtl_1_1_vector_1a06dd5aa9e15b7e51dac4cf2a768c70ad">end</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;data&#32;+&#32;size;&#32;}
<anchor xml:id="__vector_8h_source_1l00027"/>00027 
<anchor xml:id="__vector_8h_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__vector_8h_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T*&#32;data;
<anchor xml:id="__vector_8h_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size&#32;=&#32;0;
<anchor xml:id="__vector_8h_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;capacity&#32;=&#32;0;
<anchor xml:id="__vector_8h_source_1l00032"/>00032 &#32;&#32;&#32;&#32;};
<anchor xml:id="__vector_8h_source_1l00033"/>00033 
<anchor xml:id="__vector_8h_source_1l00034"/>00034 
<anchor xml:id="__vector_8h_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00038"/><link linkend="_classtl_1_1_vector_1a6c294b7b39a334eaec4367060e529aee">00038</link> &#32;&#32;&#32;&#32;<link linkend="_classtl_1_1_vector_1a6c294b7b39a334eaec4367060e529aee">Vector&lt;T&gt;::Vector</link>()
<anchor xml:id="__vector_8h_source_1l00039"/>00039 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__vector_8h_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;0;
<anchor xml:id="__vector_8h_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;=&#32;0;
<anchor xml:id="__vector_8h_source_1l00043"/>00043 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00044"/>00044 
<anchor xml:id="__vector_8h_source_1l00045"/>00045 
<anchor xml:id="__vector_8h_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00049"/><link linkend="_classtl_1_1_vector_1a3c0310b3d978ddf803d7aeaf9e82e698">00049</link> &#32;&#32;&#32;&#32;<link linkend="_classtl_1_1_vector_1a3c0310b3d978ddf803d7aeaf9e82e698">Vector&lt;T&gt;::~Vector</link>()
<anchor xml:id="__vector_8h_source_1l00050"/>00050 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="__vector_8h_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetl_1a27f87676958c34ab5d023c25d954a58a">tl::free</link>(data);
<anchor xml:id="__vector_8h_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__vector_8h_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00056"/>00056 
<anchor xml:id="__vector_8h_source_1l00057"/>00057 
<anchor xml:id="__vector_8h_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00062"/><link linkend="_classtl_1_1_vector_1acdb3986c49b9e8e803ac5078c68eea96">00062</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1acdb3986c49b9e8e803ac5078c68eea96">Vector&lt;T&gt;::push</link>(<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value)
<anchor xml:id="__vector_8h_source_1l00063"/>00063 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;==&#32;capacity)
<anchor xml:id="__vector_8h_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize(capacity&#32;==&#32;0&#32;?&#32;1&#32;:&#32;capacity&#32;+&#32;1);
<anchor xml:id="__vector_8h_source_1l00066"/>00066 
<anchor xml:id="__vector_8h_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[size++]&#32;=&#32;value;
<anchor xml:id="__vector_8h_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00069"/>00069 
<anchor xml:id="__vector_8h_source_1l00070"/>00070 
<anchor xml:id="__vector_8h_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00075"/><link linkend="_classtl_1_1_vector_1afb1123fd76e8b6b308a6c25999086afa">00075</link> &#32;&#32;&#32;&#32;T&#32;<link linkend="_classtl_1_1_vector_1afb1123fd76e8b6b308a6c25999086afa">Vector&lt;T&gt;::pop</link>()
<anchor xml:id="__vector_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;&gt;&#32;0)
<anchor xml:id="__vector_8h_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;element&#32;=&#32;data[--size];
<anchor xml:id="__vector_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;element;
<anchor xml:id="__vector_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00083"/>00083 
<anchor xml:id="__vector_8h_source_1l00084"/>00084 
<anchor xml:id="__vector_8h_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00090"/><link linkend="_classtl_1_1_vector_1a7eb4dfa2eaf5b8df36fa3aea54c76b17">00090</link> &#32;&#32;&#32;&#32;T&amp;&#32;<link linkend="_classtl_1_1_vector_1a7eb4dfa2eaf5b8df36fa3aea54c76b17">Vector&lt;T&gt;::operator[]</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)
<anchor xml:id="__vector_8h_source_1l00091"/>00091 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[index];
<anchor xml:id="__vector_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00094"/>00094 
<anchor xml:id="__vector_8h_source_1l00095"/>00095 
<anchor xml:id="__vector_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00101"/><link linkend="_classtl_1_1_vector_1aee2285df44f5b04a4a6bbb9cad9fcc37">00101</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classtl_1_1_vector_1a7eb4dfa2eaf5b8df36fa3aea54c76b17">Vector&lt;T&gt;::operator[]</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="__vector_8h_source_1l00102"/>00102 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
<anchor xml:id="__vector_8h_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[index];
<anchor xml:id="__vector_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00105"/>00105 
<anchor xml:id="__vector_8h_source_1l00106"/>00106 
<anchor xml:id="__vector_8h_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00114"/><link linkend="_classtl_1_1_vector_1a07f7c6c116240b55639be24b8bdf142e">00114</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1a07f7c6c116240b55639be24b8bdf142e">Vector&lt;T&gt;::resize</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;new_capacity)
<anchor xml:id="__vector_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T*&#32;new_data&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>T*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_namespacetl_1a2ac98dd95bdf0b59af459a290354c589">tl::malloc</link>(new_capacity&#32;*&#32;<emphasis role="keyword">sizeof</emphasis>(T)));
<anchor xml:id="__vector_8h_source_1l00117"/>00117 
<anchor xml:id="__vector_8h_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size;&#32;++i)
<anchor xml:id="__vector_8h_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_data[i]&#32;=&#32;data[i];
<anchor xml:id="__vector_8h_source_1l00120"/>00120 
<anchor xml:id="__vector_8h_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(data&#32;!=&#32;<emphasis role="keyword">nullptr</emphasis>)
<anchor xml:id="__vector_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetl_1a27f87676958c34ab5d023c25d954a58a">tl::free</link>(data);
<anchor xml:id="__vector_8h_source_1l00123"/>00123 
<anchor xml:id="__vector_8h_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;new_data;
<anchor xml:id="__vector_8h_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;capacity&#32;=&#32;new_capacity;
<anchor xml:id="__vector_8h_source_1l00126"/>00126 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00127"/>00127 
<anchor xml:id="__vector_8h_source_1l00128"/>00128 
<anchor xml:id="__vector_8h_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00132"/><link linkend="_classtl_1_1_vector_1af14e7f588cf809b751c27e54ca4d4c62">00132</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1af14e7f588cf809b751c27e54ca4d4c62">Vector&lt;T&gt;::clear</link>()
<anchor xml:id="__vector_8h_source_1l00133"/>00133 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size&#32;=&#32;0;
<anchor xml:id="__vector_8h_source_1l00135"/>00135 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00136"/>00136 
<anchor xml:id="__vector_8h_source_1l00137"/>00137 
<anchor xml:id="__vector_8h_source_1l00143"/>00143 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00144"/><link linkend="_classtl_1_1_vector_1a7a59cdb82916ebab5ae46f1b8f1efec6">00144</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classtl_1_1_vector_1a7a59cdb82916ebab5ae46f1b8f1efec6">Vector&lt;T&gt;::getSize</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="__vector_8h_source_1l00145"/>00145 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
<anchor xml:id="__vector_8h_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="__vector_8h_source_1l00147"/>00147 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00148"/>00148 
<anchor xml:id="__vector_8h_source_1l00149"/>00149 
<anchor xml:id="__vector_8h_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00157"/><link linkend="_classtl_1_1_vector_1abdd4105bc63e8757f0bf76162b3f61e2">00157</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classtl_1_1_vector_1abdd4105bc63e8757f0bf76162b3f61e2">Vector&lt;T&gt;::getCapacity</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="__vector_8h_source_1l00158"/>00158 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
<anchor xml:id="__vector_8h_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;capacity;
<anchor xml:id="__vector_8h_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00161"/>00161 
<anchor xml:id="__vector_8h_source_1l00162"/>00162 
<anchor xml:id="__vector_8h_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00168"/><link linkend="_classtl_1_1_vector_1a0453ee154d99303001476eb3e3abe6fc">00168</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1a0453ee154d99303001476eb3e3abe6fc">Vector&lt;T&gt;::insert</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;pos,&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value)
<anchor xml:id="__vector_8h_source_1l00169"/>00169 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;==&#32;capacity)
<anchor xml:id="__vector_8h_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;resize(capacity&#32;==&#32;0&#32;?&#32;1&#32;:&#32;capacity&#32;+&#32;1);
<anchor xml:id="__vector_8h_source_1l00172"/>00172 
<anchor xml:id="__vector_8h_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;size;&#32;i&#32;&gt;&#32;pos;&#32;--i)
<anchor xml:id="__vector_8h_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[i]&#32;=&#32;data[i&#32;-&#32;1];
<anchor xml:id="__vector_8h_source_1l00175"/>00175 
<anchor xml:id="__vector_8h_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[pos]&#32;=&#32;value,&#32;size++;
<anchor xml:id="__vector_8h_source_1l00177"/>00177 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00178"/>00178 
<anchor xml:id="__vector_8h_source_1l00179"/>00179 
<anchor xml:id="__vector_8h_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="__vector_8h_source_1l00187"/><link linkend="_classtl_1_1_vector_1ad694a236bd7afe82a1c0ee4b6a4229a9">00187</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classtl_1_1_vector_1ad694a236bd7afe82a1c0ee4b6a4229a9">Vector&lt;T&gt;::erase</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;pos)
<anchor xml:id="__vector_8h_source_1l00188"/>00188 &#32;&#32;&#32;&#32;{
<anchor xml:id="__vector_8h_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;&lt;&#32;size)&#32;{
<anchor xml:id="__vector_8h_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;pos;&#32;i&#32;&lt;&#32;size&#32;-&#32;1;&#32;++i)
<anchor xml:id="__vector_8h_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data[i]&#32;=&#32;data[i&#32;+&#32;1];
<anchor xml:id="__vector_8h_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;size--;
<anchor xml:id="__vector_8h_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00194"/>00194 &#32;&#32;&#32;&#32;}
<anchor xml:id="__vector_8h_source_1l00195"/>00195 }
</programlisting></section>
