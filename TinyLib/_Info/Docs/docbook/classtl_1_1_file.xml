<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtl_1_1_file" xml:lang="en-US">
<title>tl::File Class Reference</title>
<indexterm><primary>tl::File</primary></indexterm>
<para>
<computeroutput>#include &lt;File.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classtl_1_1_file_1aefe659f313e7467f1a4649f37b8a26b5">File</link> ()</para>

<para>New file reader, path must be set with <link linkend="_classtl_1_1_file_1aac2f62b549de4a940b9d0c6aa82840b2">tl::File::open()</link>. </para>
</listitem>
            <listitem><para><link linkend="_classtl_1_1_file_1a1e6a2206626b3050f4cc15cca8a29825">File</link> (const char *path)</para>

<para>New file reader, preset with a path. </para>
</listitem>
            <listitem><para><link linkend="_classtl_1_1_file_1a381c9a211bdca24b9ea4f9afec368de0">~File</link> ()</para>

<para>Nothing to clean up for now. </para>
</listitem>
            <listitem><para>void <link linkend="_classtl_1_1_file_1aac2f62b549de4a940b9d0c6aa82840b2">open</link> (const char *path)</para>

<para>Open a new file path on this file. </para>
</listitem>
            <listitem><para>void <link linkend="_classtl_1_1_file_1ad9a51d2780a1327c675a143b14bb4dd6">close</link> ()</para>

<para>Close the file path. </para>
</listitem>
            <listitem><para>void <link linkend="_classtl_1_1_file_1a78598d15c5088e079e024e13514774c7">read</link> (char **data)</para>

<para>Read char data from this file objects file path. </para>
</listitem>
            <listitem><para>size_t <link linkend="_classtl_1_1_file_1a6b98c6fe3b1cb984ab6a74971ac265c9">length</link> ()</para>

<para>Get length of file data. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__file_8h_source_1l00008">8</link> of file <link linkend="__file_8h_source">File.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classtl_1_1_file_1aefe659f313e7467f1a4649f37b8a26b5"/><section>
    <title>File()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>File</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>File</secondary></indexterm>
<para><computeroutput>tl::File::File ( )</computeroutput></para><para>

<para>New file reader, path must be set with <link linkend="_classtl_1_1_file_1aac2f62b549de4a940b9d0c6aa82840b2">tl::File::open()</link>. </para>
</para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00007">7</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
<anchor xml:id="_classtl_1_1_file_1a1e6a2206626b3050f4cc15cca8a29825"/><section>
    <title>File()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>File</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>File</secondary></indexterm>
<para><computeroutput>tl::File::File (const char * path)</computeroutput></para><para>

<para>New file reader, preset with a path. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>path</entry><entry>
<para><link linkend="_classtl_1_1_file">File</link> path to read from. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00015">15</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
<anchor xml:id="_classtl_1_1_file_1a381c9a211bdca24b9ea4f9afec368de0"/><section>
    <title>~File()</title>
<indexterm><primary>~File</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>~File</secondary></indexterm>
<para><computeroutput>tl::File::~File ( )</computeroutput></para><para>

<para>Nothing to clean up for now. </para>
</para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00022">22</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtl_1_1_file_1ad9a51d2780a1327c675a143b14bb4dd6"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>close</secondary></indexterm>
<para><computeroutput>void tl::File::close ( )</computeroutput></para><para>

<para>Close the file path. </para>
</para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00037">37</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
<anchor xml:id="_classtl_1_1_file_1a6b98c6fe3b1cb984ab6a74971ac265c9"/><section>
    <title>length()</title>
<indexterm><primary>length</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>length</secondary></indexterm>
<para><computeroutput>size_t tl::File::length ( )</computeroutput></para><para>

<para>Get length of file data. </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_classtl_1_1_file">File</link> length. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00096">96</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
<anchor xml:id="_classtl_1_1_file_1aac2f62b549de4a940b9d0c6aa82840b2"/><section>
    <title>open()</title>
<indexterm><primary>open</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>open</secondary></indexterm>
<para><computeroutput>void tl::File::open (const char * path)</computeroutput></para><para>

<para>Open a new file path on this file. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>path</entry><entry>
<para><link linkend="_classtl_1_1_file">File</link> path to read from. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00030">30</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
<anchor xml:id="_classtl_1_1_file_1a78598d15c5088e079e024e13514774c7"/><section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>tl::File</secondary></indexterm>
<indexterm><primary>tl::File</primary><secondary>read</secondary></indexterm>
<para><computeroutput>void tl::File::read (char ** data)</computeroutput></para><para>

<para>Read char data from this file objects file path. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>data</entry><entry>
<para>Data from file will go in here. nullptr if invalid path. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="__file_8cpp_source_1l00045">45</link> of file <link linkend="__file_8cpp_source">File.cpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
TinyLib/System/<link linkend="__file_8h">File.h</link>TinyLib/System/<link linkend="__file_8cpp">File.cpp</link></section>
</section>
