.TH "tl" 3 "Version 0.1.0" "TinyLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tl
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBColor\fP"
.br
.ti -1c
.RI "class \fBConsole\fP"
.br
.ti -1c
.RI "class \fBDrawable\fP"
.br
.ti -1c
.RI "class \fBFile\fP"
.br
.ti -1c
.RI "class \fBKey\fP"
.br
.ti -1c
.RI "class \fBMouse\fP"
.br
.ti -1c
.RI "class \fBRectangle\fP"
.br
.ti -1c
.RI "class \fBText\fP"
.br
.ti -1c
.RI "class \fBTime\fP"
.br
.ti -1c
.RI "struct \fBVec2i\fP"
.br
.ti -1c
.RI "struct \fBVec3i\fP"
.br
.ti -1c
.RI "struct \fBVec4i\fP"
.br
.ti -1c
.RI "class \fBVector\fP"
.br
.ti -1c
.RI "class \fBWindow\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBs8\fP = signed char"
.br
.ti -1c
.RI "using \fBs16\fP = signed short"
.br
.ti -1c
.RI "using \fBs32\fP = signed int"
.br
.ti -1c
.RI "using \fBs64\fP = signed long long"
.br
.ti -1c
.RI "using \fBu8\fP = unsigned char"
.br
.ti -1c
.RI "using \fBu16\fP = unsigned short"
.br
.ti -1c
.RI "using \fBu32\fP = unsigned int"
.br
.ti -1c
.RI "using \fBu64\fP = unsigned long long"
.br
.ti -1c
.RI "using \fBf32\fP = float"
.br
.ti -1c
.RI "using \fBf64\fP = double"
.br
.ti -1c
.RI "using \fBascii\fP = char"
.br
.ti -1c
.RI "using \fBunicode\fP = wchar_t"
.br
.ti -1c
.RI "using \fBbit\fP = bool"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBEvent\fP { \fBClosed\fP = 0b1, \fBMoved\fP = 0b10, \fBResized\fP = 0b100 }"
.br
.ti -1c
.RI "enum \fBStyle\fP { \fBBorder\fP = WS_BORDER, \fBTitle\fP = WS_CAPTION, \fBBackground\fP = WS_MINIMIZE, \fBFullscreen\fP = WS_MAXIMIZE, \fBMinimize\fP = WS_MINIMIZEBOX, \fBMaximize\fP = WS_MAXIMIZEBOX, \fBResize\fP = WS_SIZEBOX, \fBDefault\fP = WS_OVERLAPPEDWINDOW }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void * \fBmalloc\fP (size_t size)"
.br
.ti -1c
.RI "void \fBfree\fP (void *ptr)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "using \fBtl::ascii\fP = char"

.PP
Definition at line \fB53\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::bit\fP = bool"

.PP
Definition at line \fB61\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::f32\fP = float"

.PP
Definition at line \fB47\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::f64\fP = double"

.PP
Definition at line \fB50\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::s16\fP = signed short"

.PP
Definition at line \fB18\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::s32\fP = signed int"

.PP
Definition at line \fB21\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::s64\fP = signed long long"

.PP
Definition at line \fB27\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::s8\fP = signed char"

.PP
Definition at line \fB15\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::u16\fP = unsigned short"

.PP
Definition at line \fB34\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::u32\fP = unsigned int"

.PP
Definition at line \fB37\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::u64\fP = unsigned long long"

.PP
Definition at line \fB43\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::u8\fP = unsigned char"

.PP
Definition at line \fB31\fP of file \fBTypes\&.h\fP\&.
.SS "using \fBtl::unicode\fP = wchar_t"

.PP
Definition at line \fB56\fP of file \fBTypes\&.h\fP\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBtl::Event\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\f(BIClosed \fP
.TP
\f(BIMoved \fP
.TP
\f(BIResized \fP
.PP
Definition at line \fB13\fP of file \fBWindow\&.h\fP\&.
.SS "enum \fBtl::Style\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\f(BIBorder \fP
.TP
\f(BITitle \fP
.TP
\f(BIBackground \fP
.TP
\f(BIFullscreen \fP
.TP
\f(BIMinimize \fP
.TP
\f(BIMaximize \fP
.TP
\f(BIResize \fP
.TP
\f(BIDefault \fP
.PP
Definition at line \fB21\fP of file \fBWindow\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "void tl::free (void * ptr)"

.PP
Definition at line \fB11\fP of file \fBMemory\&.cpp\fP\&.
.SS "void * tl::malloc (size_t size)"

.PP
Definition at line \fB5\fP of file \fBMemory\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TinyLib from the source code\&.
